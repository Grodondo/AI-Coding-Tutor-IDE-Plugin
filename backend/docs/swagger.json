{
    "swagger": "2.0",
    "info": {
        "description": "API for the AI Coding Tutor IDE Plugin - A smart programming assistant",
        "title": "AI Coding Tutor API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/analyze": {
            "post": {
                "description": "Analyze code for best practices, improvements, and potential issues",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Code Analysis"
                ],
                "summary": "Analyze code",
                "parameters": [
                    {
                        "description": "Code to analyze",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AnalyzeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AnalyzeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or level",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/feedback": {
            "post": {
                "description": "Submit feedback for an AI interaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback"
                ],
                "summary": "Submit feedback",
                "parameters": [
                    {
                        "description": "Feedback details",
                        "name": "feedback",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.FeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback submitted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Query ID not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/query": {
            "post": {
                "description": "Send a query to the AI and get a response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AI Interaction"
                ],
                "summary": "Query the AI",
                "parameters": [
                    {
                        "description": "Query parameters",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.QueryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Example: {'token': 'eyJhbG...', 'user': {'username': 'johndoe', 'role': 'user'}}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Example: {'error': 'Invalid request format'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Example: {'error': 'Invalid credentials'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Example: {'error': 'Failed to generate token'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the authenticated user's profile information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Example: {'error': 'Unauthorized'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Example: {'error': 'Internal server error'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "description": "Return the list of supported AI providers with their default configurations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get supported AI providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ProviderConfigResponse"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user with their details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "registration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Example: {'message': 'User registered successfully'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Example: {'error': 'Invalid request format'} or {'error': 'Email already registered'} or {'error': 'Password must contain...'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Example: {'error': 'Internal server error'} or {'error': 'Failed to create user'}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "description": "Return for each service: provider, model, encrypted_api_key, and prompts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get AI settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/handlers.AiSettingsResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Accepts raw api_key; server will encrypt it and store under encrypted_api_key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Update AI settings",
                "parameters": [
                    {
                        "description": "Service configuration update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ServiceConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format or missing api_key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error encrypting or saving",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/{service}": {
            "delete": {
                "description": "Delete the AI settings for a specific service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Delete AI settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "service",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/verify-token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Verify if the provided JWT token is valid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Verify JWT token",
                "responses": {
                    "200": {
                        "description": "Token is valid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or missing token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AiSettingsResponse": {
            "description": "AI settings configuration for a service",
            "type": "object",
            "properties": {
                "ai_model": {
                    "type": "string",
                    "example": "mixtral-8x7b-32768"
                },
                "ai_provider": {
                    "type": "string",
                    "example": "groq"
                },
                "api_url": {
                    "type": "string",
                    "example": "https://api.groq.com/openai/v1/chat/completions"
                },
                "encrypted_api_key": {
                    "type": "string",
                    "example": "encrypted_key_data"
                },
                "prompts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "expert": "Detailed analysis",
                        "novice": "Simple explanation"
                    }
                },
                "temperature": {
                    "type": "number",
                    "example": 0.7
                }
            }
        },
        "handlers.AnalyzeRequest": {
            "description": "Request structure for code analysis",
            "type": "object",
            "required": [
                "code",
                "level"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "def hello_world():\n    print('Hello, World!')"
                },
                "includeLineNumbers": {
                    "type": "boolean",
                    "example": true
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "beginner",
                        "intermediate",
                        "advanced"
                    ],
                    "example": "beginner"
                }
            }
        },
        "handlers.AnalyzeResponse": {
            "description": "Response structure for code analysis results",
            "type": "object",
            "properties": {
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Suggestion"
                    }
                }
            }
        },
        "handlers.FeedbackRequest": {
            "description": "Feedback request structure",
            "type": "object",
            "required": [
                "feedback",
                "id"
            ],
            "properties": {
                "feedback": {
                    "type": "string",
                    "enum": [
                        "positive",
                        "negative",
                        "neutral"
                    ],
                    "example": "positive"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "handlers.LoginRequest": {
            "description": "Login request structure",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "secretpass123"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "handlers.ProfileResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.ProviderConfigResponse": {
            "description": "Configuration for supported AI providers",
            "type": "object",
            "properties": {
                "default_url": {
                    "type": "string",
                    "example": "https://api.groq.com/openai/v1/chat/completions"
                },
                "description": {
                    "type": "string",
                    "example": "Groq API for fast LLM inference"
                },
                "name": {
                    "type": "string",
                    "example": "groq"
                }
            }
        },
        "handlers.QueryRequest": {
            "description": "Query request structure for AI interactions",
            "type": "object",
            "required": [
                "level",
                "query"
            ],
            "properties": {
                "context": {},
                "level": {
                    "type": "string",
                    "enum": [
                        "beginner",
                        "intermediate",
                        "advanced"
                    ],
                    "example": "beginner"
                },
                "query": {
                    "type": "string",
                    "example": "How do I create a new file in Python?"
                }
            }
        },
        "handlers.QueryResponse": {
            "description": "Response structure for AI query results",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "response": {
                    "type": "string",
                    "example": "To create a new file in Python, you can use the open() function with 'w' mode..."
                }
            }
        },
        "handlers.RegisterRequest": {
            "description": "Registration request structure",
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "SecurePass123!"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "handlers.ServiceConfig": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "config for this service\nrequired: true",
                    "type": "object",
                    "properties": {
                        "ai_model": {
                            "description": "model identifier\nrequired: true",
                            "type": "string"
                        },
                        "ai_provider": {
                            "description": "which AI provider to use\nrequired: true",
                            "type": "string"
                        },
                        "api_key": {
                            "description": "raw API key; server will encrypt this\nrequired: true",
                            "type": "string"
                        },
                        "api_url": {
                            "description": "API endpoint URL for the provider",
                            "type": "string"
                        },
                        "prompts": {
                            "description": "named prompts",
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "temperature": {
                            "description": "AI model temperature",
                            "type": "number"
                        }
                    }
                },
                "service": {
                    "description": "the unique service name, e.g. \"query\"\nrequired: true",
                    "type": "string"
                }
            }
        },
        "handlers.Suggestion": {
            "description": "Individual suggestion from code analysis",
            "type": "object",
            "properties": {
                "diff": {
                    "type": "string",
                    "example": "- old_code\n+ new_code"
                },
                "explanation": {
                    "type": "string",
                    "example": "Adding a docstring improves code readability"
                },
                "line": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "type": "string",
                    "example": "Consider adding docstring"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}