basePath: /api/v1
definitions:
  handlers.AiSettingsResponse:
    description: AI settings configuration for a service
    properties:
      ai_model:
        example: mixtral-8x7b-32768
        type: string
      ai_provider:
        example: groq
        type: string
      api_url:
        example: https://api.groq.com/openai/v1/chat/completions
        type: string
      encrypted_api_key:
        example: encrypted_key_data
        type: string
      prompts:
        additionalProperties:
          type: string
        example:
          expert: Detailed analysis
          novice: Simple explanation
        type: object
      temperature:
        example: 0.7
        type: number
    type: object
  handlers.AnalyzeRequest:
    description: Request structure for code analysis
    properties:
      code:
        example: |-
          def hello_world():
              print('Hello, World!')
        type: string
      includeLineNumbers:
        example: true
        type: boolean
      level:
        enum:
        - beginner
        - intermediate
        - advanced
        example: beginner
        type: string
    required:
    - code
    - level
    type: object
  handlers.AnalyzeResponse:
    description: Response structure for code analysis results
    properties:
      suggestions:
        items:
          $ref: '#/definitions/handlers.Suggestion'
        type: array
    type: object
  handlers.FeedbackRequest:
    description: Feedback request structure
    properties:
      feedback:
        enum:
        - positive
        - negative
        - neutral
        example: positive
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    required:
    - feedback
    - id
    type: object
  handlers.LoginRequest:
    description: Login request structure
    properties:
      password:
        example: secretpass123
        type: string
      username:
        example: johndoe
        type: string
    required:
    - password
    - username
    type: object
  handlers.ProfileResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  handlers.ProviderConfigResponse:
    description: Configuration for supported AI providers
    properties:
      default_url:
        example: https://api.groq.com/openai/v1/chat/completions
        type: string
      description:
        example: Groq API for fast LLM inference
        type: string
      name:
        example: groq
        type: string
    type: object
  handlers.QueryRequest:
    description: Query request structure for AI interactions
    properties:
      context: {}
      level:
        enum:
        - beginner
        - intermediate
        - advanced
        example: beginner
        type: string
      query:
        example: How do I create a new file in Python?
        type: string
    required:
    - level
    - query
    type: object
  handlers.QueryResponse:
    description: Response structure for AI query results
    properties:
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      response:
        example: To create a new file in Python, you can use the open() function with
          'w' mode...
        type: string
    type: object
  handlers.RegisterRequest:
    description: Registration request structure
    properties:
      email:
        example: john.doe@example.com
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
      password:
        example: SecurePass123!
        type: string
      username:
        example: johndoe
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - username
    type: object
  handlers.ServiceConfig:
    properties:
      config:
        description: |-
          config for this service
          required: true
        properties:
          ai_model:
            description: |-
              model identifier
              required: true
            type: string
          ai_provider:
            description: |-
              which AI provider to use
              required: true
            type: string
          api_key:
            description: |-
              raw API key; server will encrypt this
              required: true
            type: string
          api_url:
            description: API endpoint URL for the provider
            type: string
          prompts:
            additionalProperties:
              type: string
            description: named prompts
            type: object
          temperature:
            description: AI model temperature
            type: number
        type: object
      service:
        description: |-
          the unique service name, e.g. "query"
          required: true
        type: string
    type: object
  handlers.Suggestion:
    description: Individual suggestion from code analysis
    properties:
      diff:
        example: |-
          - old_code
          + new_code
        type: string
      explanation:
        example: Adding a docstring improves code readability
        type: string
      line:
        example: 0
        type: integer
      message:
        example: Consider adding docstring
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for the AI Coding Tutor IDE Plugin - A smart programming assistant
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: AI Coding Tutor API
  version: "1.0"
paths:
  /analyze:
    post:
      consumes:
      - application/json
      description: Analyze code for best practices, improvements, and potential issues
      parameters:
      - description: Code to analyze
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.AnalyzeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AnalyzeResponse'
        "400":
          description: Invalid request format or level
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Analyze code
      tags:
      - Code Analysis
  /api/v1/feedback:
    post:
      consumes:
      - application/json
      description: Submit feedback for an AI interaction
      parameters:
      - description: Feedback details
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/handlers.FeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Feedback submitted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Query ID not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Submit feedback
      tags:
      - Feedback
  /api/v1/query:
    post:
      consumes:
      - application/json
      description: Send a query to the AI and get a response
      parameters:
      - description: Query parameters
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/handlers.QueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.QueryResponse'
        "400":
          description: Invalid request format
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Query the AI
      tags:
      - AI Interaction
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'Example: {''token'': ''eyJhbG...'', ''user'': {''username'':
            ''johndoe'', ''role'': ''user''}}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'Example: {''error'': ''Invalid request format''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'Example: {''error'': ''Invalid credentials''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'Example: {''error'': ''Failed to generate token''}'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - authentication
  /profile:
    get:
      description: Get the authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ProfileResponse'
        "401":
          description: 'Example: {''error'': ''Unauthorized''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'Example: {''error'': ''Internal server error''}'
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - authentication
  /providers:
    get:
      description: Return the list of supported AI providers with their default configurations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ProviderConfigResponse'
            type: array
      summary: Get supported AI providers
      tags:
      - settings
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with their details
      parameters:
      - description: Registration details
        in: body
        name: registration
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'Example: {''message'': ''User registered successfully''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'Example: {''error'': ''Invalid request format''} or {''error'':
            ''Email already registered''} or {''error'': ''Password must contain...''}'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'Example: {''error'': ''Internal server error''} or {''error'':
            ''Failed to create user''}'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User registration
      tags:
      - authentication
  /settings:
    get:
      description: 'Return for each service: provider, model, encrypted_api_key, and
        prompts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/handlers.AiSettingsResponse'
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get AI settings
      tags:
      - settings
    post:
      consumes:
      - application/json
      description: Accepts raw api_key; server will encrypt it and store under encrypted_api_key
      parameters:
      - description: Service configuration update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ServiceConfig'
      produces:
      - application/json
      responses:
        "200":
          description: 'status: success'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request format or missing api_key
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error encrypting or saving
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update AI settings
      tags:
      - settings
  /settings/{service}:
    delete:
      consumes:
      - application/json
      description: Delete the AI settings for a specific service
      parameters:
      - description: Service name
        in: path
        name: service
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Settings deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request format
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete AI settings
      tags:
      - settings
  /verify-token:
    get:
      consumes:
      - application/json
      description: Verify if the provided JWT token is valid
      produces:
      - application/json
      responses:
        "200":
          description: Token is valid
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or missing token
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Verify JWT token
      tags:
      - authentication
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
